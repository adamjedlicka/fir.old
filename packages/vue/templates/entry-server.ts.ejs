import devalue from 'devalue'
import { createSSRApp } from 'vue'
import { renderToString } from 'vue/server-renderer'
import App from './App.vue'

<%_ for (const [extension, path] of Object.entries(context.extensions)) { _%>
import * as <%- extension -%> from '<%- path -%>'
<%_ } _%>

export default async ({ template, ctx }) => {
  let id = 0

  ctx.payload = {}
  ctx.head = {}
  ctx.id = () => String(++id)

  const app = createSSRApp(App)

  <%_ for (const [extension] of Object.entries(context.extensions)) { _%>
  if (<%- extension -%>.before) await <%- extension -%>.before(app, ctx)
  <%_ } _%>

  const html = template.replace('<!--app-->', await renderToString(app, ctx))

  const output = {
    html,
  }

  <%_ for (const [extension] of Object.entries(context.extensions)) { _%>
  if (<%- extension -%>.after) await <%- extension -%>.after(app, ctx, output)
  <%_ } _%>

  return output
}
